# for discord
import nextcord
from nextcord.ext import commands
from nextcord.ext.commands import Context
import datetime

import modules.database as database
from modules.checkers import check_admin_permissions
from typing import Optional

from nextcord.utils import get

from .ui import SettingsViewer


class Setup(commands.Cog, name="–£—Å—Ç–∞–Ω–æ–≤–∫–∞"):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞"""

    COG_EMOJI: str = "üîß"

    def __init__(self, bot):
        self.bot = bot

    async def cog_check(self, ctx: Context) -> bool:
        if ctx.guild is None:
            return True
        else:
            return check_admin_permissions(ctx)

    @commands.Cog.listener()
    async def on_guild_join(self, guild):
        self.bot.database.get_guild_info(guild.id)
        self.bot.tables.create_embeds_table(guild.id)
        self.bot.tables.create_astral_table(guild.id)
        embed: nextcord.Embed = nextcord.Embed(
            title=f"{self.bot.user.name} —Ç–µ–ø–µ—Ä—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {guild.name}",
            colour=0xFF9500,
        )
        embed.add_field(
            name="=–ø—Ä–µ—Ñ–∏–∫—Å", value="–∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", inline=True
        )
        embed.add_field(
            name="=–¥–æ–±–∞–≤–∏—Ç—å_–ø–µ—Ä—Å–æ–Ω–∞–ª",
            value="–¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø–æ —Å–ø—Ä–∞–≤–∫–µ)",
            inline=True,
        )
        embed.add_field(
            name="=—É–¥–∞–ª–∏—Ç—å_–ø–µ—Ä—Å–æ–Ω–∞–ª",
            value="—É–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø–æ —Å–ø—Ä–∞–≤–∫–µ)",
            inline=True,
        )
        embed.set_footer(text=f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ {self.bot.user.name}! :)")
        await guild.owner.send(embed=embed)

    @commands.command(brief="–†—É—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞")
    @commands.guild_only()
    async def –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è(self, ctx: Context):
        self.bot.database.get_guild_info(ctx.guild.id)
        # self.bot.tables.create_art_table(ctx.guild.id)
        self.bot.tables.create_embeds_table(ctx.guild.id)
        self.bot.tables.create_astral_table(ctx.guild.id)
        await ctx.send("Inited successful!")

    @commands.command(
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–∂–µ–¥–µ–Ω–µ–≤–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –∞–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞",
    )
    @commands.guild_only()
    async def –∞–Ω–∏–º–µ–≥–æ—Ä–æ—Å–∫–æ–ø_–∞–∫—Ç–∏–≤–∞—Ü–∏—è(
        self, ctx: Context, channel: Optional[nextcord.TextChannel] = None
    ):

        if isinstance(channel, nextcord.TextChannel):
            self.bot.database.set_horo(ctx.guild.id, True, channels=[channel.id])
            await ctx.send(
                f"–ê–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∫–∞–Ω–∞–ª–∞ {channel.name}. "
                + "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ä–æ–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –∞–Ω–∏–º–µ_–≥–æ—Ä–æ—Å–∫–æ–ø_—Ä–æ–ª—å"
            )
        else:
            status: bool = self.bot.database.get_guild_info().horo
            if not status:
                return await ctx.send(
                    "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞"
                )
            else:
                self.bot.database.set_horo(ctx.guild.id, False)
                return await ctx.send("–ê–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø –æ—Ç–∫–ª—é—á–µ–Ω.")

    @commands.command(
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–∂–µ–¥–µ–Ω–µ–≤–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–µ–π—Ä–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞",
    )
    @commands.guild_only()
    async def –Ω–µ–π—Ä–æ–≥–æ—Ä–æ—Å–∫–æ–ø_–∞–∫—Ç–∏–≤–∞—Ü–∏—è(
        self, ctx: Context, channel: Optional[nextcord.TextChannel] = None
    ):

        if isinstance(channel, nextcord.TextChannel):
            self.bot.database.set_neural_horo(ctx.guild.id, True, channels=[channel.id])
            await ctx.send(
                f"–ù–µ–π—Ä–æ –≥–æ—Ä–æ—Å–∫–æ–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∫–∞–Ω–∞–ª–∞ {channel.name}. "
                + "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ä–æ–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –Ω–µ–π—Ä–æ_–≥–æ—Ä–æ—Å–∫–æ–ø_—Ä–æ–ª—å"
            )
        else:
            status: bool = self.bot.database.get_guild_info().neuralhoro
            if not status:
                return await ctx.send(
                    "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–µ–π—Ä–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞"
                )
            else:
                self.bot.database.set_neural_horo(ctx.guild.id, False)
                return await ctx.send("–ì–æ—Ä–æ—Å–∫–æ–ø –æ—Ç–∫–ª—é—á–µ–Ω.")

    @commands.command(
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å Shikimori",
    )
    @commands.guild_only()
    async def —à–∏–∫–∏–Ω–æ–≤–æ—Å—Ç–∏_–∞–∫—Ç–∏–≤–∞—Ü–∏—è(
        self, ctx: Context, channel: Optional[nextcord.TextChannel] = None
    ):

        if isinstance(channel, nextcord.TextChannel):
            self.bot.database.set_shikimori_news(
                ctx.guild.id, True, channels=[channel.id]
            )
            await ctx.send(f"–ù–æ–≤–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞ {channel.name}")
        else:
            status: bool = self.bot.database.get_guild_info().shikimori_news
            if not status:
                return await ctx.send(
                    "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π —Å Shikimori, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞"
                )
            else:
                self.bot.database.set_shikimori_news(ctx.guild.id, False)
                return await ctx.send("–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

    @commands.command(
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–∂–µ–¥–µ–Ω–µ–≤–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–ª–∏–∑–æ–≤ —Å Shikimori",
    )
    @commands.guild_only()
    async def —à–∏–∫–∏—Ä–µ–ª–∏–∑—ã_–∞–∫—Ç–∏–≤–∞—Ü–∏—è(
        self, ctx, channel: Optional[nextcord.TextChannel] = None
    ):

        if isinstance(channel, nextcord.TextChannel):
            self.bot.database.set_shikimori_releases(
                ctx.guild.id, True, channels=[channel.id]
            )
            await ctx.send(f"–†–µ–ª–∏–∑—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞ {channel.name}")
        else:
            status: bool = self.bot.database.get_guild_info().shikimori_news
            if not status:
                return await ctx.send(
                    "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–ª–∏–∑–æ–≤ —Å Shikimori, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞"
                )
            else:
                self.bot.database.set_shikimori_releases(ctx.guild.id, False)
                return await ctx.send("–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

    @commands.command(
        pass_context=True,
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞",
    )
    @commands.guild_only()
    async def –∞–Ω–∏–º–µ–≥–æ—Ä–æ—Å–∫–æ–ø_—Ä–æ–ª—å(
        self, ctx: Context, role: Optional[nextcord.Role] = None
    ):

        if isinstance(role, nextcord.Role):
            guild_info = self.bot.database.get_guild_info(ctx.guild.id)
            self.bot.database.set_horo(
                ctx.guild.id,
                True,
                roles=[role.id],
                channels=guild_info.horo_channels,
            )
            await ctx.send(f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ {role.name}.")
        else:
            return await ctx.send(
                "–î–ª—è —É–∫–∞–∑–∞–Ω–∏—è —É–ø–æ–º—è–Ω–∞–µ–º–æ–π —Ä–æ–ª–∏, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id —Ä–æ–ª–∏."
            )

    @commands.command(
        pass_context=True,
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–µ–π—Ä–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞",
    )
    @commands.guild_only()
    async def –Ω–µ–π—Ä–æ–≥–æ—Ä–æ—Å–∫–æ–ø_—Ä–æ–ª—å(
        self, ctx: Context, role: Optional[nextcord.Role] = None
    ):

        if isinstance(role, nextcord.Role):
            guild_info = self.bot.database.get_guild_info(ctx.guild.id)
            self.bot.database.set_neural_horo(
                ctx.guild.id,
                True,
                roles=[role.id],
                channels=guild_info.neuralhoro_channels,
            )
            await ctx.send(f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ {role.name}.")
        else:
            return await ctx.send(
                "–î–ª—è —É–∫–∞–∑–∞–Ω–∏—è —É–ø–æ–º—è–Ω–∞–µ–º–æ–π —Ä–æ–ª–∏, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id —Ä–æ–ª–∏."
            )

    @commands.command(
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π —Å Shikimori",
    )
    @commands.guild_only()
    async def —à–∏–∫–∏–Ω–æ–≤–æ—Å—Ç–∏_—Ä–æ–ª—å(
        self, ctx: Context, role: Optional[nextcord.Role] = None
    ):

        if isinstance(role, nextcord.Role):
            guild_info = self.bot.database.get_guild_info(ctx.guild.id)
            self.bot.database.set_shikimori_news(
                ctx.guild.id,
                True,
                roles=[role.id],
                channels=guild_info.shikimori_news_channels,
            )
            await ctx.send(f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ {role.name}.")
        else:
            return await ctx.send(
                "–î–ª—è —É–∫–∞–∑–∞–Ω–∏—è —É–ø–æ–º—è–Ω–∞–µ–º–æ–π —Ä–æ–ª–∏, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id —Ä–æ–ª–∏."
            )

    @commands.command(
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–ª–∏–∑–æ–≤ —Å Shikimori",
    )
    @commands.guild_only()
    async def —à–∏–∫–∏—Ä–µ–ª–∏–∑—ã_—Ä–æ–ª—å(self, ctx: Context, role: Optional[nextcord.Role] = None):

        if isinstance(role, nextcord.Role):
            guild_info = self.bot.database.get_guild_info(ctx.guild.id)
            self.bot.database.set_shikimori_releases(
                ctx.guild.id,
                True,
                roles=[role.id],
                channels=guild_info.shikimori_releases_channels,
            )
            await ctx.send(f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ {role.name}.")
        else:
            return await ctx.send(
                "–î–ª—è —É–∫–∞–∑–∞–Ω–∏—è —É–ø–æ–º—è–Ω–∞–µ–º–æ–π —Ä–æ–ª–∏, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id —Ä–æ–ª–∏."
            )

    @commands.command(
        pass_context=True,
        aliases=["prefix"],
        brief="–ø—Ä–µ—Ñ–∏–∫—Å",
        description="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞",
    )
    @commands.guild_only()
    async def –ø—Ä–µ—Ñ–∏–∫—Å(self, ctx, *, –ø—Ä–µ—Ñ–∏–∫—Å: Optional[str] = None):

        if –ø—Ä–µ—Ñ–∏–∫—Å is None:
            return await ctx.send("–ù–µ —É–∫–∞–∑–∞–Ω –ø—Ä–µ—Ñ–∏–∫—Å")

        self.bot.database.set_guild_prefix(ctx.guild.id, –ø—Ä–µ—Ñ–∏–∫—Å)
        self.bot.prefixes[ctx.guild.id] = –ø—Ä–µ—Ñ–∏–∫—Å
        return await ctx.send(f"–ü—Ä–µ—Ñ–∏–∫—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {–ø—Ä–µ—Ñ–∏–∫—Å}.")

    @commands.command(brief="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    @commands.guild_only()
    async def –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_–≤–æ–π—Å(
        self,
        ctx: Context,
        –∫–∞–Ω–∞–ª: Optional[nextcord.VoiceChannel] = None,
        –∫–∞—Ç–µ–≥–æ—Ä–∏—è: Optional[nextcord.CategoryChannel] = None,
    ):

        if isinstance(–∫–∞–Ω–∞–ª, nextcord.VoiceChannel) and isinstance(
            –∫–∞—Ç–µ–≥–æ—Ä–∏—è, nextcord.CategoryChannel
        ):
            self.bot.database.set_voice_channels(
                ctx.guild.id, {"category": –∫–∞—Ç–µ–≥–æ—Ä–∏—è.id, "generator": –∫–∞–Ω–∞–ª.id}
            )
            return await ctx.send(f"–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        else:
            return await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!")

    @commands.command(
        brief="–î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª",
    )
    @commands.guild_only()
    async def –¥–æ–±–∞–≤–∏—Ç—å_–ø–µ—Ä—Å–æ–Ω–∞–ª(self, ctx, —Ç–∏–ø: str = "", *args):

        —Ç–∏–ø = —Ç–∏–ø.lower()
        if —Ç–∏–ø not in ["–∞–¥–º–∏–Ω", "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä", "—Ä–µ–¥–∞–∫—Ç–æ—Ä"]:
            return await ctx.send("–í–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∏–ø—ã: –∞–¥–º–∏–Ω, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, —Ä–µ–¥–∞–∫—Ç–æ—Ä")

        roles: list = list(args)
        if not roles:
            return await ctx.send(f"–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å/—Ä–æ–ª–∏")

        roles_id: list = []
        for role in roles:
            if role.startswith("<@&"):
                roles_id.append(int(role[3:-1]))

        match —Ç–∏–ø:
            case "–∞–¥–º–∏–Ω":
                self.bot.database.add_stuff_roles(ctx.guild.id, admin_roles=roles_id)
            case "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä":
                self.bot.database.add_stuff_roles(
                    ctx.guild.id, moderator_roles=roles_id
                )
            case "—Ä–µ–¥–∞–∫—Ç–æ—Ä":
                self.bot.database.add_stuff_roles(ctx.guild.id, editor_roles=roles_id)

        await ctx.send(f"–î–æ–±–∞–≤–ª–µ–Ω–æ")

    @commands.command(
        brief="–£–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª",
    )
    @commands.guild_only()
    async def —É–¥–∞–ª–∏—Ç—å_–ø–µ—Ä—Å–æ–Ω–∞–ª(self, ctx, —Ç–∏–ø: str = "", *args):

        —Ç–∏–ø = —Ç–∏–ø.lower()
        if —Ç–∏–ø not in ["–∞–¥–º–∏–Ω", "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä", "—Ä–µ–¥–∞–∫—Ç–æ—Ä"]:
            return await ctx.send("–í–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∏–ø—ã: –∞–¥–º–∏–Ω, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, —Ä–µ–¥–∞–∫—Ç–æ—Ä")

        roles: list = list(args)
        if not roles:
            return await ctx.send(f"–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å/—Ä–æ–ª–∏")

        roles_id: list = []
        for role in roles:
            if role.startswith("<@&"):
                roles_id.append(int(role[3:-1]))

        match —Ç–∏–ø:
            case "–∞–¥–º–∏–Ω":
                self.bot.database.remove_stuff_roles(ctx.guild.id, admin_roles=roles_id)
            case "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä":
                self.bot.database.remove_stuff_roles(
                    ctx.guild.id, moderator_roles=roles_id
                )
            case "—Ä–µ–¥–∞–∫—Ç–æ—Ä":
                self.bot.database.remove_stuff_roles(
                    ctx.guild.id, editor_roles=roles_id
                )

        await ctx.send("–£–¥–∞–ª–µ–Ω–æ.")

    @commands.command(
        brief="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞",
    )
    @commands.guild_only()
    async def –Ω–∞—Å—Ç—Ä–æ–π–∫–∏(self, ctx: Context):

        guild: database.GuildsSetiings = self.bot.database.get_guild_info(ctx.guild.id)

        embed = nextcord.Embed(
            title=f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ | {ctx.guild.name}",
            description=f"–ë–æ—Ç: **{self.bot.user.name}**\n" + f"–ü—Ä–µ—Ñ–∏–∫—Å: {guild.prefix}",
            colour=nextcord.Colour.random(),
            timestamp=datetime.datetime.now(),
        )

        if ctx.author.avatar:
            embed.set_author(
                name=ctx.author.display_name, icon_url=ctx.author.avatar.url
            )
        else:
            embed.set_author(
                name=ctx.author.display_name,
                icon_url=f"https://cdn.discordapp.com/embed/avatars/{str(int(ctx.author.discriminator) % 5)}.png",
            )

        if ctx.guild.icon:
            embed.set_thumbnail(url=ctx.guild.icon.url)

        if guild.admin_roles or guild.moderator_roles or guild.editor_roles:
            embed.add_field(
                name="–†–æ–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞",
                value=(
                    (
                        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: "
                        + ", ".join(
                            [
                                ctx.guild.get_role(role_id).mention
                                for role_id in guild.admin_roles
                                if ctx.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.admin_roles
                        else ""
                    )
                    + (
                        "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã:  "
                        + ", ".join(
                            [
                                ctx.guild.get_role(role_id).mention
                                for role_id in guild.moderator_roles
                                if ctx.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.moderator_roles
                        else ""
                    )
                    + (
                        f"–†–µ–¥–∞–∫—Ç–æ—Ä—ã: "
                        ", ".join(
                            [
                                ctx.guild.get_role(role_id).mention
                                for role_id in guild.editor_roles
                                if ctx.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.editor_roles
                        else ""
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b", value="**–†–æ–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã**", inline=False
            )

        tables_string: str = (
            f"Embeds: https://docs.google.com/spreadsheets/d/{guild.embeds_table}/edit#gid=0"
            if guild.embeds_table
            else ""
        )
        if tables_string != "":
            embed.add_field(name="–¢–∞–±–ª–∏—Ü—ã", value=tables_string, inline=False)
        else:
            embed.add_field(
                name="\u200b", value="**–¢–∞–±–ª–∏—Ü—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã**", inline=False
            )

        if guild.voice_channel_category != 0 and guild.voice_channel_generator != 0:
            embed.add_field(
                name="–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã",
                value=(
                    (
                        "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: "
                        + ctx.guild.get_channel(guild.voice_channel_generator).mention
                        if ctx.guild.get_channel(guild.voice_channel_generator)
                        is not None
                        else "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–∞–Ω–∞–ª"
                    )
                    + "\n"
                    + (
                        "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: "
                        + get(
                            ctx.guild.categories, id=guild.voice_channel_category
                        ).mention
                        if get(ctx.guild.categories, id=guild.voice_channel_category)
                        is not None
                        else "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è"
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b",
                value=f"–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!",
                inline=False,
            )

        if guild.horo:
            embed.add_field(
                name="–ê–Ω–∏–º–µ –ì–æ—Ä–æ—Å–∫–æ–ø",
                value=(
                    (
                        "–†–æ–ª–∏: "
                        + ", ".join(
                            [
                                ctx.guild.get_role(role_id).mention
                                for role_id in guild.horo_roles
                                if ctx.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.horo_roles
                        else ""
                    )
                    + (
                        f"–ö–∞–Ω–∞–ª—ã: "
                        + ", ".join(
                            [
                                ctx.guild.get_channel(channel_id).mention
                                for channel_id in guild.horo_channels
                                if ctx.guild.get_channel(channel_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.horo_channels
                        else ""
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b", value="**–ê–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**", inline=False
            )

        if guild.neuralhoro:
            embed.add_field(
                name="–ù–µ–π—Ä–æ –ì–æ—Ä–æ—Å–∫–æ–ø",
                value=(
                    (
                        "–†–æ–ª–∏: "
                        + ", ".join(
                            [
                                ctx.guild.get_role(role_id).mention
                                for role_id in guild.neuralhoro_roles
                                if ctx.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.neuralhoro_roles
                        else ""
                    )
                    + (
                        f"–ö–∞–Ω–∞–ª—ã: "
                        + ", ".join(
                            [
                                ctx.guild.get_channel(channel_id).mention
                                for channel_id in guild.neuralhoro_channels
                                if ctx.guild.get_channel(channel_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.neuralhoro_channels
                        else ""
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b", value="**–ù–µ–π—Ä–æ–≥–æ—Ä–æ—Å–∫–æ–ø –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**", inline=False
            )

        if guild.shikimori_news:
            embed.add_field(
                name="–ù–æ–≤–æ—Å—Ç–∏ Shikimori",
                value=(
                    (
                        "–†–æ–ª–∏: "
                        + ", ".join(
                            [
                                ctx.guild.get_role(role_id).mention
                                for role_id in guild.shikimori_news_roles
                                if ctx.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.shikimori_news_roles
                        else ""
                    )
                    + (
                        f"–ö–∞–Ω–∞–ª—ã: "
                        + ", ".join(
                            [
                                ctx.guild.get_channel(channel_id).mention
                                for channel_id in guild.shikimori_news_channels
                                if ctx.guild.get_channel(channel_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.shikimori_news_channels
                        else ""
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b",
                value="**–ù–æ–≤–æ—Å—Ç–∏ Shikimori –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã!**",
                inline=False,
            )

        if guild.shikimori_releases:
            embed.add_field(
                name="–†–µ–ª–∏–∑—ã Shikimori",
                value=(
                    (
                        "–†–æ–ª–∏: "
                        + ", ".join(
                            [
                                ctx.guild.get_role(role_id).mention
                                for role_id in guild.shikimori_releases_roles
                                if ctx.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.shikimori_releases_roles
                        else ""
                    )
                    + (
                        f"–ö–∞–Ω–∞–ª—ã: "
                        + ", ".join(
                            [
                                ctx.guild.get_channel(channel_id).mention
                                for channel_id in guild.shikimori_releases_channels
                                if ctx.guild.get_channel(channel_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.shikimori_releases_channels
                        else ""
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b",
                value="**–†–µ–ª–∏–∑—ã Shikimori –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã!**",
                inline=False,
            )

        embed_for_button: nextcord.Embed = nextcord.Embed(
            description='–° —Ü–µ–ª—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞, –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ —Å–∫—Ä—ã—Ç–æ–º —Ä–µ–∂–∏–º–µ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"',
            colour=nextcord.Colour.random(),
        )

        view: SettingsViewer = SettingsViewer(ctx.author, embed)

        message: nextcord.Message = await ctx.send(embed=embed_for_button, view=view)
        await view.wait()
        await message.edit(view=None)


def setup(bot):
    bot.add_cog(Setup(bot))
