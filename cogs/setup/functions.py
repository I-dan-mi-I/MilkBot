import nextcord
from nextcord.ext import commands
from nextcord.ext.commands import Context
import datetime

import modules.database as database
from modules.checkers import check_admin_permissions, app_check_admin_permissions
from typing import Optional

from nextcord.utils import get


class Setup(commands.Cog, name="–£—Å—Ç–∞–Ω–æ–≤–∫–∞"):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞"""

    COG_EMOJI: str = "üîß"
    COG_ID: int = 0

    def __init__(self, bot):
        self.bot = bot

    async def cog_check(self, ctx: Context) -> bool:
        if ctx.guild is None:
            return True
        else:
            return check_admin_permissions(ctx)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏"
    )
    async def mailing(self, interaction: nextcord.Interaction):
        pass

    @mailing.subcommand(
        description="–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏–ª–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –≤–∏–¥–∞ —Ä–∞—Å—Å—ã–ª–∫–∏"
    )
    async def activate(
        self,
        interaction: nextcord.Interaction,
        —Ç–∏–ø: str = nextcord.SlashOption(
            description="—Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏",
            choices={
                "a–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø": "–∞–Ω–∏–º–µ–≥–æ—Ä–æ—Å–∫–æ–ø",
                "–Ω–æ–≤–æ—Å—Ç–∏ —à–∏–∫–∏–º–æ—Ä–∏": "—à–∏–∫–∏–Ω–æ–≤–æ—Å—Ç–∏",
                "—Ä–µ–ª–∏–∑—ã —à–∏–∫–∏–º–æ—Ä–∏": "—à–∏–∫–∏—Ä–µ–ª–∏–∑—ã",
            },
            required=True,
        ),
        –∫–∞–Ω–∞–ª: Optional[nextcord.TextChannel] = nextcord.SlashOption(
            description="–∫–∞–Ω–∞–ª –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å)",
            required=False,
        ),
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
        await interaction.response.defer(ephemeral=True)

        if not app_check_admin_permissions(interaction, self.bot):
            return await interaction.followup.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!", ephemeral=True)

        match —Ç–∏–ø:
            case "–∞–Ω–∏–º–µ–≥–æ—Ä–æ—Å–∫–æ–ø":
                if isinstance(–∫–∞–Ω–∞–ª, nextcord.TextChannel):
                    self.bot.database.set_horo(
                        interaction.guild.id, True, channels=[–∫–∞–Ω–∞–ª.id]
                    )
                    await interaction.followup.send(
                        f"–ê–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∫–∞–Ω–∞–ª–∞ {–∫–∞–Ω–∞–ª.name}."
                    )
                else:
                    status: bool = self.bot.database.get_guild_info(
                        interaction.guild.id
                    ).horo
                    if not status:
                        return await interaction.followup.send(
                            "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞"
                        )
                    else:
                        self.bot.database.set_horo(interaction.guild.id, False)
                        return await interaction.followup.send(
                            "–ê–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø –æ—Ç–∫–ª—é—á–µ–Ω."
                        )
            case "—à–∏–∫–∏–Ω–æ–≤–æ—Å—Ç–∏":
                if isinstance(–∫–∞–Ω–∞–ª, nextcord.TextChannel):
                    self.bot.database.set_shikimori_news(
                        interaction.guild.id, True, channels=[–∫–∞–Ω–∞–ª.id]
                    )
                    await interaction.followup.send(
                        f"–ù–æ–≤–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞ {–∫–∞–Ω–∞–ª.name}"
                    )
                else:
                    status: bool = self.bot.database.get_guild_info(
                        interaction.guild.id
                    ).shikimori_news
                    if not status:
                        return await interaction.followup.send(
                            "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π —Å Shikimori, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞"
                        )
                    else:
                        self.bot.database.set_shikimori_news(
                            interaction.guild.id, False
                        )
                        return await interaction.followup.send("–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã.")
            case "—à–∏–∫–∏—Ä–µ–ª–∏–∑—ã":
                if isinstance(–∫–∞–Ω–∞–ª, nextcord.TextChannel):
                    self.bot.database.set_shikimori_releases(
                        interaction.guild.id, True, channels=[–∫–∞–Ω–∞–ª.id]
                    )
                    await interaction.followup.send(
                        f"–†–µ–ª–∏–∑—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞ {–∫–∞–Ω–∞–ª.name}"
                    )
                else:
                    status: bool = self.bot.database.get_guild_info(
                        interaction.guild.id
                    ).shikimori_news
                    if not status:
                        return await interaction.followup.send(
                            "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–ª–∏–∑–æ–≤ —Å Shikimori, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞"
                        )
                    else:
                        self.bot.database.set_shikimori_releases(
                            interaction.guild.id, False
                        )
                        return await interaction.followup.send("–†–µ–ª–∏–∑—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

    @mailing.subcommand(
        description="–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏–ª–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ä–æ–ª–∏ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ"
    )
    async def role(
        self,
        interaction: nextcord.Interaction,
        —Ç–∏–ø: str = nextcord.SlashOption(
            description="—Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏",
            choices={
                "a–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø": "–∞–Ω–∏–º–µ–≥–æ—Ä–æ—Å–∫–æ–ø",
                "–Ω–æ–≤–æ—Å—Ç–∏ —à–∏–∫–∏–º–æ—Ä–∏": "—à–∏–∫–∏–Ω–æ–≤–æ—Å—Ç–∏",
                "—Ä–µ–ª–∏–∑—ã —à–∏–∫–∏–º–æ—Ä–∏": "—à–∏–∫–∏—Ä–µ–ª–∏–∑—ã",
            },
            required=True,
        ),
        —Ä–æ–ª—å: Optional[nextcord.Role] = nextcord.SlashOption(
            description="—É–ø–æ–º–∏–Ω–∞–µ–º–∞—è —Ä–æ–ª—å (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å)",
            required=False,
        ),
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
        await interaction.response.defer(ephemeral=True)

        if not app_check_admin_permissions(interaction, self.bot):
            return await interaction.followup.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!", ephemeral=True)

        match —Ç–∏–ø:
            case "–∞–Ω–∏–º–µ–≥–æ—Ä–æ—Å–∫–æ–ø":
                if isinstance(—Ä–æ–ª—å, nextcord.Role):
                    guild_info = self.bot.database.get_guild_info(interaction.guild.id)
                    self.bot.database.set_horo(
                        interaction.guild.id,
                        True,
                        roles=[—Ä–æ–ª—å.id],
                        channels=guild_info.horo_channels,
                    )
                    return await interaction.followup.send(
                        f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ {—Ä–æ–ª—å.name}."
                    )
                else:
                    return await interaction.followup.send(
                        "–î–ª—è —É–∫–∞–∑–∞–Ω–∏—è —É–ø–æ–º—è–Ω–∞–µ–º–æ–π —Ä–æ–ª–∏, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id —Ä–æ–ª–∏."
                    )
            case "—à–∏–∫–∏–Ω–æ–≤–æ—Å—Ç–∏":
                if isinstance(—Ä–æ–ª—å, nextcord.Role):
                    guild_info = self.bot.database.get_guild_info(interaction.guild.id)
                    self.bot.database.set_shikimori_news(
                        interaction.guild.id,
                        True,
                        roles=[—Ä–æ–ª—å.id],
                        channels=guild_info.shikimori_news_channels,
                    )
                    return await interaction.followup.send(
                        f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ {—Ä–æ–ª—å.name}."
                    )
                else:
                    return await interaction.followup.send(
                        "–î–ª—è —É–∫–∞–∑–∞–Ω–∏—è —É–ø–æ–º—è–Ω–∞–µ–º–æ–π —Ä–æ–ª–∏, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id —Ä–æ–ª–∏."
                    )
            case "—à–∏–∫–∏—Ä–µ–ª–∏–∑—ã":
                if isinstance(—Ä–æ–ª—å, nextcord.Role):
                    guild_info = self.bot.database.get_guild_info(interaction.guild.id)
                    self.bot.database.set_shikimori_releases(
                        interaction.guild.id,
                        True,
                        roles=[—Ä–æ–ª—å.id],
                        channels=guild_info.shikimori_releases_channels,
                    )
                    return await interaction.followup.send(
                        f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ {—Ä–æ–ª—å.name}."
                    )
                else:
                    return await interaction.followup.send(
                        "–î–ª—è —É–∫–∞–∑–∞–Ω–∏—è —É–ø–æ–º—è–Ω–∞–µ–º–æ–π —Ä–æ–ª–∏, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id —Ä–æ–ª–∏."
                    )

    @nextcord.slash_command(
        guild_ids=[],
        force_global=True,
        description="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥",
    )
    async def prefix(
        self,
        interaction: nextcord.Interaction,
        –ø—Ä–µ—Ñ–∏–∫—Å: Optional[str] = nextcord.SlashOption(required=True),
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
        await interaction.response.defer()

        if not app_check_admin_permissions(interaction, self.bot):
            return await interaction.followup.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!", ephemeral=True)

        self.bot.database.set_guild_prefix(interaction.guild.id, –ø—Ä–µ—Ñ–∏–∫—Å)
        self.bot.prefixes[interaction.guild.id] = –ø—Ä–µ—Ñ–∏–∫—Å
        return await interaction.followup.send(f"–ü—Ä–µ—Ñ–∏–∫—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {–ø—Ä–µ—Ñ–∏–∫—Å}.")

    @nextcord.slash_command(
        guild_ids=[],
        force_global=True,
        description="–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤",
    )
    async def init_temp_voice_channels(
        self,
        interaction: nextcord.Interaction,
        –∫–∞–Ω–∞–ª: Optional[nextcord.VoiceChannel] = nextcord.SlashOption(required=True),
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
        await interaction.response.defer()

        if not app_check_admin_permissions(interaction, self.bot):
            return await interaction.followup.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!", ephemeral=True)

        if –∫–∞–Ω–∞–ª.category is None:
            return await interaction.followup.send("–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!")

        if isinstance(–∫–∞–Ω–∞–ª, nextcord.VoiceChannel):
            self.bot.database.set_voice_channels(
                interaction.guild.id,
                {"category": –∫–∞–Ω–∞–ª.category.id, "generator": –∫–∞–Ω–∞–ª.id},
            )
            return await interaction.followup.send("–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        else:
            return await interaction.followup.send("–£–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!")

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º"
    )
    async def stuff(self, interaction: nextcord.Interaction):
        pass

    @stuff.subcommand(description="–î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª")
    async def add(
        self,
        interaction: nextcord.Interaction,
        —Ç–∏–ø: str = nextcord.SlashOption(
            description="—Ç–∏–ø –ø–µ—Ä—Å–æ–Ω–∞–ª–∞",
            choices={
                "a–¥–º–∏–Ω": "–∞–¥–º–∏–Ω",
                "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä": "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                "—Ä–µ–¥–∞–∫—Ç–æ—Ä": "—Ä–µ–¥–∞–∫—Ç–æ—Ä",
            },
            required=True,
        ),
        —Ä–æ–ª–∏: str = nextcord.SlashOption(
            description="—É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ä–æ–ª–µ–π, –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é", required=True
        ),
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
        await interaction.response.defer(ephemeral=True)

        if not app_check_admin_permissions(interaction, self.bot):
            return await interaction.followup.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!", ephemeral=True)

        roles = —Ä–æ–ª–∏.replace(" ", "").replace("<@&", "").replace(">", "").split(",")
        roles_id = list(map(int, roles))

        match —Ç–∏–ø:
            case "–∞–¥–º–∏–Ω":
                self.bot.database.add_stuff_roles(
                    interaction.guild.id, admin_roles=roles_id
                )
            case "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä":
                self.bot.database.add_stuff_roles(
                    interaction.guild.id, moderator_roles=roles_id
                )
            case "—Ä–µ–¥–∞–∫—Ç–æ—Ä":
                self.bot.database.add_stuff_roles(
                    interaction.guild.id, editor_roles=roles_id
                )

        await interaction.followup.send("–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã", ephemeral=True)

    @stuff.subcommand(description="–£–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª")
    async def remove(
        self,
        interaction: nextcord.Interaction,
        —Ç–∏–ø: str = nextcord.SlashOption(
            description="—Ç–∏–ø –ø–µ—Ä—Å–æ–Ω–∞–ª–∞",
            choices={
                "a–¥–º–∏–Ω": "–∞–¥–º–∏–Ω",
                "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä": "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                "—Ä–µ–¥–∞–∫—Ç–æ—Ä": "—Ä–µ–¥–∞–∫—Ç–æ—Ä",
            },
            required=True,
        ),
        —Ä–æ–ª–∏: str = nextcord.SlashOption(
            description="—É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ä–æ–ª–µ–π, –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é", required=True
        ),
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
        await interaction.response.defer(ephemeral=True)

        if not app_check_admin_permissions(interaction, self.bot):
            return await interaction.followup.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!", ephemeral=True)

        roles = —Ä–æ–ª–∏.replace(" ", "").replace("<@&", "").replace(">", "").split(",")
        roles_id = list(map(int, roles))

        match —Ç–∏–ø:
            case "–∞–¥–º–∏–Ω":
                self.bot.database.remove_stuff_roles(
                    interaction.guild.id, admin_roles=roles_id
                )
            case "–º–æ–¥–µ—Ä–∞—Ç–æ—Ä":
                self.bot.database.remove_stuff_roles(
                    interaction.guild.id, moderator_roles=roles_id
                )
            case "—Ä–µ–¥–∞–∫—Ç–æ—Ä":
                self.bot.database.remove_stuff_roles(
                    interaction.guild.id, editor_roles=roles_id
                )

        await interaction.followup.send("–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã", ephemeral=True)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞"
    )
    async def current_settings(self, interaction: nextcord.Interaction):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")
        await interaction.response.defer(ephemeral=True)

        if not app_check_admin_permissions(interaction, self.bot):
            return await interaction.followup.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!", ephemeral=True)

        guild: database.GuildsSetiings = self.bot.database.get_guild_info(
            interaction.guild.id
        )

        embed = nextcord.Embed(
            title=f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ | {interaction.guild.name}",
            description=f"–ë–æ—Ç: **{self.bot.user.name}**\n" + f"–ü—Ä–µ—Ñ–∏–∫—Å: {guild.prefix}",
            colour=nextcord.Colour.random(),
            timestamp=datetime.datetime.now(),
        )

        if interaction.user.avatar:
            embed.set_author(
                name=interaction.user.display_name, icon_url=interaction.user.avatar.url
            )
        else:
            embed.set_author(
                name=interaction.user.display_name,
                icon_url=f"https://cdn.discordapp.com/embed/avatars/{str(int(interaction.user.discriminator) % 5)}.png",
            )

        if interaction.guild.icon:
            embed.set_thumbnail(url=interaction.guild.icon.url)

        if guild.admin_roles or guild.moderator_roles or guild.editor_roles:
            embed.add_field(
                name="–†–æ–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞",
                value=(
                    (
                        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: "
                        + ", ".join(
                            [
                                interaction.guild.get_role(role_id).mention
                                for role_id in guild.admin_roles
                                if interaction.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.admin_roles
                        else ""
                    )
                    + (
                        "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã:  "
                        + ", ".join(
                            [
                                interaction.guild.get_role(role_id).mention
                                for role_id in guild.moderator_roles
                                if interaction.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.moderator_roles
                        else ""
                    )
                    + (
                        f"–†–µ–¥–∞–∫—Ç–æ—Ä—ã: "
                        ", ".join(
                            [
                                interaction.guild.get_role(role_id).mention
                                for role_id in guild.editor_roles
                                if interaction.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.editor_roles
                        else ""
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b", value="**–†–æ–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã**", inline=False
            )

        if guild.voice_channel_category != 0 and guild.voice_channel_generator != 0:
            embed.add_field(
                name="–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã",
                value=(
                    (
                        "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: "
                        + interaction.guild.get_channel(
                            guild.voice_channel_generator
                        ).mention
                        if interaction.guild.get_channel(guild.voice_channel_generator)
                        is not None
                        else "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–∞–Ω–∞–ª"
                    )
                    + "\n"
                    + (
                        "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: "
                        + get(
                            interaction.guild.categories,
                            id=guild.voice_channel_category,
                        ).mention
                        if get(
                            interaction.guild.categories,
                            id=guild.voice_channel_category,
                        )
                        is not None
                        else "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è"
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b",
                value=f"–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!",
                inline=False,
            )

        if guild.horo:
            embed.add_field(
                name="–ê–Ω–∏–º–µ –ì–æ—Ä–æ—Å–∫–æ–ø",
                value=(
                    (
                        "–†–æ–ª–∏: "
                        + ", ".join(
                            [
                                interaction.guild.get_role(role_id).mention
                                for role_id in guild.horo_roles
                                if interaction.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.horo_roles
                        else ""
                    )
                    + (
                        f"–ö–∞–Ω–∞–ª—ã: "
                        + ", ".join(
                            [
                                interaction.guild.get_channel(channel_id).mention
                                for channel_id in guild.horo_channels
                                if interaction.guild.get_channel(channel_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.horo_channels
                        else ""
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b", value="**–ê–Ω–∏–º–µ –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!**", inline=False
            )

        if guild.shikimori_news:
            embed.add_field(
                name="–ù–æ–≤–æ—Å—Ç–∏ Shikimori",
                value=(
                    (
                        "–†–æ–ª–∏: "
                        + ", ".join(
                            [
                                interaction.guild.get_role(role_id).mention
                                for role_id in guild.shikimori_news_roles
                                if interaction.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.shikimori_news_roles
                        else ""
                    )
                    + (
                        f"–ö–∞–Ω–∞–ª—ã: "
                        + ", ".join(
                            [
                                interaction.guild.get_channel(channel_id).mention
                                for channel_id in guild.shikimori_news_channels
                                if interaction.guild.get_channel(channel_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.shikimori_news_channels
                        else ""
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b",
                value="**–ù–æ–≤–æ—Å—Ç–∏ Shikimori –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã!**",
                inline=False,
            )

        if guild.shikimori_releases:
            embed.add_field(
                name="–†–µ–ª–∏–∑—ã Shikimori",
                value=(
                    (
                        "–†–æ–ª–∏: "
                        + ", ".join(
                            [
                                interaction.guild.get_role(role_id).mention
                                for role_id in guild.shikimori_releases_roles
                                if interaction.guild.get_role(role_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.shikimori_releases_roles
                        else ""
                    )
                    + (
                        f"–ö–∞–Ω–∞–ª—ã: "
                        + ", ".join(
                            [
                                interaction.guild.get_channel(channel_id).mention
                                for channel_id in guild.shikimori_releases_channels
                                if interaction.guild.get_channel(channel_id) is not None
                            ]
                        )
                        + "\n"
                        if guild.shikimori_releases_channels
                        else ""
                    )
                ),
                inline=False,
            )
        else:
            embed.add_field(
                name="\u200b",
                value="**–†–µ–ª–∏–∑—ã Shikimori –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã!**",
                inline=False,
            )

        await interaction.followup.send(embed=embed, ephemeral=True)


def setup(bot):
    bot.add_cog(Setup(bot))
