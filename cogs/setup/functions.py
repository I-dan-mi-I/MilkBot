# for discord
import nextcord
from nextcord.ext import commands, tasks
from nextcord.utils import get
from settings import settings

from additional.check_permission import check_admin_permissions

# database
import database.serversettings as serversettings
import database.server_init as server_init
import database.globalsettings as globalsettings
from database.updater import createTables

uri = settings["StatUri"]

# for logs
from datetime import datetime
import asyncio


class Setup(commands.Cog, name="–£—Å—Ç–∞–Ω–æ–≤–∫–∞"):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞"""

    COG_EMOJI = "üîß"

    def __init__(self, bot):
        self.bot = bot

    @commands.command(pass_context=True, brief="–†—É—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞")
    @commands.check(check_admin_permissions)
    @commands.guild_only()
    async def –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è(self, ctx):
        server_init.initServer(uri, ctx.guild.id)
        await ctx.send(
            "Inited successful! –î–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞—Å—Ç—Ä–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–º–∞–Ω–¥—É –∏–Ω–∏—Ü–∏–ª–∏–∑–∞—Ü–∏—è-–∞—Å—Ç—Ä–∞–ª"
        )

    @commands.command(
        pass_context=True,
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–∂–µ–¥–µ–Ω–µ–≤–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –≥–æ—Ä–æ—Å–∫–æ–ø–∞",
    )
    @commands.guild_only()
    @commands.check(check_admin_permissions)
    async def –≥–æ—Ä–æ—Å–∫–æ–ø_–∞–∫—Ç–∏–≤–∞—Ü–∏—è(self, ctx, channel=None):

        if channel is None:
            status = serversettings.getHoroStatus(
                self.bot.databaseSession, ctx.guild.id
            )
            if not status:
                await ctx.send(
                    "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞"
                )
                return
            else:
                serversettings.setHoro(
                    self.bot.databaseSession, ctx.guild.id, False, None
                )
                await ctx.send("–ì–æ—Ä–æ—Å–∫–æ–ø –æ—Ç–∫–ª—é—á–µ–Ω.")
                return
        else:
            if channel.startswith("<"):
                channel = int(channel[2:-1])

        channel = self.bot.get_channel(channel)
        if channel is None:
            await ctx.send("–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –∫–∞–Ω–∞–ª")
            return

        serversettings.setHoro(self.bot.databaseSession, ctx.guild.id, True, channel.id)
        await ctx.send(
            f"–ì–æ—Ä–æ—Å–∫–æ–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∫–∞–Ω–∞–ª–∞ {channel.name}. –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ä–æ–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≥–æ—Ä–æ—Å–∫–æ–ø_—Ä–æ–ª—å"
        )

    @commands.command(
        pass_context=True,
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å Shikimori",
    )
    @commands.guild_only()
    @commands.check(check_admin_permissions)
    async def —à–∏–∫–∏–Ω–æ–≤–æ—Å—Ç–∏_–∞–∫—Ç–∏–≤–∞—Ü–∏—è(self, ctx, channel=None):

        if channel is None:
            status = serversettings.getShikimoriNewsStatus(
                self.bot.databaseSession, ctx.guild.id
            )
            if not status:
                await ctx.send(
                    "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π —Å Shikimori, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞"
                )
                return
            else:
                serversettings.setShikimoriNews(
                    self.bot.databaseSession, ctx.guild.id, False, None
                )
                await ctx.send("–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã.")
                return
        else:
            if channel.startswith("<"):
                channel = int(channel[2:-1])

        channel = self.bot.get_channel(channel)
        if channel is None:
            await ctx.send("–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –∫–∞–Ω–∞–ª")
            return

        serversettings.setShikimoriNews(
            self.bot.databaseSession, ctx.guild.id, True, channel.id
        )
        await ctx.send(f"–ù–æ–≤–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞ {channel.name}")

    @commands.command(
        pass_context=True,
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–∂–µ–¥–µ–Ω–µ–≤–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–ª–∏–∑–æ–≤ —Å Shikimori",
    )
    @commands.guild_only()
    @commands.check(check_admin_permissions)
    async def —à–∏–∫–∏—Ä–µ–ª–∏–∑_–∞–∫—Ç–∏–≤–∞—Ü–∏—è(self, ctx, channel=None):

        if channel is None:
            status = serversettings.getShikimoriReleaseStatus(
                self.bot.databaseSession, ctx.guild.id
            )
            if not status:
                await ctx.send(
                    "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–ª–∏–∑–æ–≤ —Å Shikimori, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞"
                )
                return
            else:
                serversettings.setShikimoriRelease(
                    self.bot.databaseSession, ctx.guild.id, False, None
                )
                await ctx.send("–†–µ–ª–∏–∑—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã.")
                return
        else:
            if channel.startswith("<"):
                channel = int(channel[2:-1])

        channel = self.bot.get_channel(channel)
        if channel is None:
            await ctx.send("–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –∫–∞–Ω–∞–ª")
            return

        serversettings.setShikimoriRelease(
            self.bot.databaseSession, ctx.guild.id, True, channel.id
        )
        await ctx.send(f"–†–µ–ª–∏–∑—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞ {channel.name}")

    @commands.command(
        pass_context=True,
        brief="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–∂–¥–µ–Ω–µ–≤–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –≥–æ—Ä–æ—Å–∫–æ–ø–∞",
    )
    @commands.guild_only()
    @commands.check(check_admin_permissions)
    async def –≥–æ—Ä–æ—Å–∫–æ–ø_—Ä–æ–ª—å(self, ctx, role=None):

        if role is None:
            await ctx.send(
                "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞"
            )
            return
        else:
            if role.startswith("<"):
                role = int(role[3:-1])

        role = get(ctx.guild.roles, id=role)
        if role is None:
            await ctx.send("–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞ —Ä–æ–ª—å")
            return

        serversettings.setHoroRole(self.bot.databaseSession, ctx.guild.id, role.id)
        await ctx.send(f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–∏ {role.name}.")

    @commands.command(pass_context=True, brief="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö")
    @commands.is_owner()
    async def –±–¥_–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ(self, ctx, —Ç–∞–±–ª–∏—Ü–∞=None):

        if —Ç–∞–±–ª–∏—Ü–∞ is None:
            await ctx.send("–£–∫–∞–∂–∏—Ç–µ –∏–º—è —Ç–∞–±–ª–∏—Ü—ã")
            return

        guilds = []
        for guild in self.bot.guilds:
            guilds.append(guild.id)

        try:
            createTables(uri, guilds, —Ç–∞–±–ª–∏—Ü–∞)
            await ctx.send("–£—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
        except Exception as e:
            await ctx.send(f"–ü—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    @commands.Cog.listener()
    async def on_guild_join(self, guild):
        server_init.initServer(uri, guild.id)
        embed = nextcord.Embed(
            title=f"{self.bot.user.name} —Ç–µ–ø–µ—Ä—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {guild.name}", color=0xFF9500
        )
        embed.add_field(
            name="=–ø—Ä–µ—Ñ–∏–∫—Å", value="–∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", inline=True
        )
        embed.add_field(
            name="=–¥–æ–±–∞–≤–∏—Ç—å_–∞–¥–º–∏–Ω–∞",
            value="–¥–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ id",
            inline=True,
        )
        embed.add_field(
            name="=—É–¥–∞–ª–∏—Ç—å_–∞–¥–º–∏–Ω–∞",
            value="—É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ id",
            inline=True,
        )
        embed.set_footer(text=f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ {self.bot.user.name}! :)")
        await guild.owner.send(embed=embed)

    @commands.command(
        pass_context=True,
        brief="–∏–Ω–∏—Ü–∞–ª–∏–∑–∞—Ü–∏—è –∞—Å—Ç—Ä–∞–ª–∞",
        description="–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ê—Å—Ç—Ä–∞–ª–∞",
    )
    @commands.check(check_admin_permissions)
    @commands.guild_only()
    async def –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_–∞—Å—Ç—Ä–∞–ª(self, ctx):

        info = serversettings.getInfo(self.bot.databaseSession, ctx.guild.id)
        if info.astralspr is not None:
            astralspr = info.astraltable
        else:
            astralspr = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

        emb = nextcord.Embed(title="–ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é –∞—Å—Ç—Ä–∞–ª–∞.")

        emb.add_field(name=f"{ctx.guild.name}", value=f"{ctx.guild.id}")

        emb.add_field(
            name="–¢–∞–±–ª–∏—Ü–∞",
            value=f"<https://docs.google.com/spreadsheets/d/{astralspr}>",
            inline=False,
        )

        emb.set_footer(
            text="–ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é –±—É–¥–µ—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—ë–Ω –≤ —Ç–µ—á–µ–Ω–∏–∏ —Ç—Ä—ë—Ö –¥–Ω–µ–π."
        )

        channel = await self.bot.fetch_channel(940850304444932158)
        await ctx.send(embed=emb)
        await channel.send(embed=emb)

    @commands.command(
        pass_context=True,
        brief="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞—Å—Ç—Ä–∞–ª-—Å–∫—Ä–∏–ø—Ç",
        description="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞—Å—Ç—Ä–∞–ª-—Å–∫—Ä–∏–ø—Ç",
    )
    @commands.is_owner()
    @commands.guild_only()
    async def –∞—Å—Ç—Ä–∞–ª_—Å–∫—Ä–∏–ø—Ç(self, ctx, guildid=None, scriptid=None):

        serversettings.setAstralScript(self.bot.databaseSession, int(guildid), scriptid)

        guild = get(self.bot.guilds, id=int(guildid))
        await ctx.send("–ê—Å—Ç—Ä–∞–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
        await guild.owner.send("–ê—Å—Ç—Ä–∞–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")

    @commands.command(
        pass_context=True,
        aliases=["prefix"],
        brief="–ø—Ä–µ—Ñ–∏–∫—Å",
        description="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å",
    )
    @commands.guild_only()
    @commands.check(check_admin_permissions)
    async def –ø—Ä–µ—Ñ–∏–∫—Å(self, ctx, *, –ø—Ä–µ—Ñ–∏–∫—Å):

        arg = –ø—Ä–µ—Ñ–∏–∫—Å
        serversettings.setPrefix(self.bot.databaseSession, ctx.guild.id, arg)
        await ctx.send(f"–ü—Ä–µ—Ñ–∏–∫—Å –±—É–¥–µ—Ç –∏–∑–º–µ–Ω—ë–Ω –≤ —Ç–µ—á–µ–Ω–∏–∏ –º–∏–Ω—É—Ç—ã –Ω–∞ {arg}.")
        return

    @commands.command(pass_context=True, brief="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    @commands.guild_only()
    @commands.check(check_admin_permissions)
    async def –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è_–≤–æ–π—Å(self, ctx, *–∫–∞–Ω–∞–ª_–∫–∞—Ç–µ–≥–æ—Ä–∏—è):

        args = –∫–∞–Ω–∞–ª_–∫–∞—Ç–µ–≥–æ—Ä–∏—è
        if args != ():
            serversettings.setPrivateVoice(self.bot.databaseSession, ctx.guild.id, args)
            await ctx.send(f"–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        else:
            await ctx.send(f"–ù–µ —É–∫–∞–∑–∞–Ω –∫–∞–Ω–∞–ª –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è.")

    @commands.command(
        pass_context=True,
        aliases=["addadmin"],
        brief="–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞",
        description="–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞ –ø–æ id/—É–ø–æ–º–∏–Ω–∞–Ω–∏—é —Ä–æ–ª–∏",
    )
    @commands.has_permissions(administrator=True)
    @commands.guild_only()
    async def –¥–æ–±–∞–≤–∏—Ç—å_–∞–¥–º–∏–Ω–∞(self, ctx, *ids):

        args = ids
        g = []
        if args == ():
            await ctx.send(f"–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å")
            return
        for arg in args:
            if arg.startswith("<@&"):
                g.append(arg[3:-1])
        if g != []:
            args = g

        for arg in args:
            serversettings.addAdminRole(self.bot.databaseSession, ctx.guild.id, arg)
        await ctx.send(f"–ê–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω")

    @commands.command(
        pass_context=True,
        aliases=["deladmin"],
        brief="–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞",
        description="–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞ –ø–æ id/—É–ø–æ–º–∏–Ω–∞–Ω–∏—é —Ä–æ–ª–∏",
    )
    @commands.has_permissions(administrator=True)
    @commands.guild_only()
    async def —É–¥–∞–ª–∏—Ç—å_–∞–¥–º–∏–Ω–∞(self, ctx, *ids):

        args = ids
        g = []
        if args == ():
            await ctx.send(f"–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å")
            return
        for arg in args:
            if arg.startswith("<@&"):
                g.append(arg[3:-1])
        if g != []:
            args = g

        for arg in args:
            serversettings.delAdminRole(self.bot.databaseSession, ctx.guild.id, arg)
        await ctx.send(f"–ê–¥–º–∏–Ω —É–¥–∞–ª–µ–Ω")

    @commands.command(
        pass_context=True,
        aliases=["adduserrole"],
        brief="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Ä–æ–ª—å",
        description="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Ä–æ–ª—å –ø–æ id/—É–ø–æ–º–∏–Ω–∞–Ω–∏—é",
    )
    @commands.guild_only()
    @commands.check(check_admin_permissions)
    async def –¥–æ–±–∞–≤–∏—Ç—å_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(self, ctx, *—Ä–æ–ª—å):

        args = —Ä–æ–ª—å
        g = []
        if args == ():
            await ctx.send(f"–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å")
            return
        for arg in args:
            if arg.startswith("<@&"):
                g.append(arg[3:-1])
            else:
                g.append(arg)
        if g != []:
            args = g

        for arg in args:
            serversettings.addUserRole(self.bot.databaseSession, ctx.guild.id, arg)
        await ctx.send(f"–†–æ–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

    @commands.command(
        pass_context=True,
        brief="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞",
        description="–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞",
    )
    @commands.guild_only()
    @commands.check(check_admin_permissions)
    async def –Ω–∞—Å—Ç—Ä–æ–π–∫–∏(self, ctx):

        info = serversettings.getInfo(session, ctx.guild.id)
        if info.prefix is not None:
            prefix = info.prefix
        else:
            prefix = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

        emb = nextcord.Embed(
            title=f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–æ—Ç–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {ctx.guild.name}",
            description=f"–ü—Ä–µ—Ñ–∏–∫—Å: {prefix}",
        )
        emb.color = nextcord.Colour.random()
        emb.set_thumbnail(url=ctx.guild.icon.url)

        if info.userroles is not None:
            userroles = info.userroles
        else:
            userroles = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

        if info.adminroles is not None:
            adminroles = info.adminroles
        else:
            adminroles = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

        emb.add_field(
            name="–†–æ–ª–∏",
            value=f"–†–æ–ª–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {userroles}\n–†–æ–ª–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {adminroles}",
            inline=False,
        )

        if info.embtable is not None:
            embtable = info.embtable
        else:
            embtable = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

        if info.artspr is not None:
            artspr = info.artspr
        else:
            artspr = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

        if info.astralspr is not None:
            astralspr = info.astralspr
        else:
            astralspr = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

        emb.add_field(
            name="–¢–∞–±–ª–∏—Ü—ã",
            value=f"Embed: <https://docs.google.com/spreadsheets/d/{embtable}>\nAstral: <https://docs.google.com/spreadsheets/d/{astralspr}>\nArt: <https://docs.google.com/spreadsheets/d/{artspr}>",
            inline=False,
        )

        if info.voicegenerator is not None:
            voicegenerator = info.voicegenerator
        else:
            voicegenerator = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

        if info.voicecategory is not None:
            voicecategory = info.voicecategory
        else:
            voicecategory = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

        if info.voicemessage is not None:
            voicemessage = info.voicemessage
        else:
            voicemessage = "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

        emb.add_field(
            name="–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã",
            value=f"–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä: {voicegenerator}\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {voicecategory}\n–ù–∞—Å—Ç—Ä–æ–µ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {voicemessage}",
            inline=False,
        )

        if info.horo:
            emb.add_field(
                name="–ì–æ—Ä–æ—Å–∫–æ–ø",
                value=f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {'–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' if info.horo else '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}\n–ö–∞–Ω–∞–ª: {info.horochannel if info.horochannel else '–Ω–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n–†–æ–ª—å: {info.hororole if info.hororole else '–Ω–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}",
                inline=False,
            )

        else:
            emb.add_field(
                name="–ì–æ—Ä–æ—Å–∫–æ–ø",
                value=f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {'–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' if info.horo else '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}",
                inline=False,
            )

        await ctx.send(embed=emb)
        return


def setup(bot):
    bot.add_cog(Setup(bot))
