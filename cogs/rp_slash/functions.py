from datetime import datetime
from random import randint
from typing import Optional

import nextcord
import requests
from base.base_cog import MilkCog


class RPSlash(MilkCog, name="RolePlay [Slash Commands]"):
    """RolePlay –∫–æ–º–∞–Ω–¥—ã"""

    COG_EMOJI: str = "üé≠"

    def __init__(self, bot):
        self.bot = bot

    @MilkCog.slash_command(description="–û–±–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def hug(
        self,
        interaction: nextcord.Interaction,
        user: Optional[nextcord.Member] = nextcord.SlashOption(
            name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=False
        ),
    ):
        await self.hug_action(interaction, user)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–û–±–Ω—è—Ç—å")
    async def hug_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.hug_action(interaction, member)

    async def hug_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):

        embed = nextcord.Embed(
            description=f"{interaction.user.display_name} –æ–±–Ω–∏–º–∞–µ—Ç ",
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.description += f"—Å–∞–º —Å–µ–±—è."
            mention = None
        else:
            embed.description += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        custom_gif = self.bot.database.get_hug_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            embed.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/hug/gif"
            )
            embed.set_image(url=r.json()["link"])

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @MilkCog.slash_command(description="–£–ª—ã–±–Ω—É—Ç—å—Å—è")
    async def smile(
        self,
        interaction: nextcord.Interaction,
    ):

        emb = nextcord.Embed(
            title=f"{interaction.user.display_name} —É–ª—ã–±–∞–µ—Ç—Å—è.",
            timestamp=datetime.now(),
        )

        custom_gif = self.bot.database.get_smile_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            emb.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/smile/gif"
            )
            emb.set_image(url=r.json()["link"])
        await interaction.followup.send(embed=emb)

    @MilkCog.slash_command(description="–¢—ã–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def poke(
        self,
        interaction: nextcord.Interaction,
        user: Optional[nextcord.Member] = nextcord.SlashOption(
            name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=False
        ),
    ):

        embed = nextcord.Embed(
            description=f"{interaction.user.display_name} —Ç—ã–∫–∞–µ—Ç ",
            timestamp=datetime.now(),
        )

        if user is None or user == interaction.user:
            embed.description += "—Å–∞–º —Å–µ–±—è."
            mention = None
        else:
            embed.description += user.display_name
            mention = user.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        custom_gif = self.bot.database.get_poke_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            embed.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/poke/gif"
            )
            embed.set_image(url=r.json()["link"])
        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @MilkCog.slash_command(description="–î–∞—Ç—å –ø–æ—â—ë—á–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    async def slap(
        self,
        interaction: nextcord.Interaction,
        user: Optional[nextcord.Member] = nextcord.SlashOption(
            name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=False
        ),
    ):
        await self.slap_action(interaction, user)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–î–∞—Ç—å –ø–æ—â—ë—á–∏–Ω—É")
    async def slap_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.slap_action(interaction, member)

    async def slap_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):

        embed = nextcord.Embed(
            description=f"{interaction.user.display_name} –¥–∞—ë—Ç –ø–æ—â—ë—á–∏–Ω—É ",
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.description += f"—Å–∞–º–æ–º—É —Å–µ–±–µ."
            mention = None
        else:
            embed.description += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        custom_gif = self.bot.database.get_slap_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            embed.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/slap/gif"
            )
            embed.set_image(url=r.json()["link"])

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @MilkCog.slash_command(description="–£–∫—É—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def bite(
        self,
        interaction: nextcord.Interaction,
        user: Optional[nextcord.Member] = nextcord.SlashOption(
            name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=False
        ),
    ):
        await self.bite_action(interaction, user)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–£–∫—É—Å–∏—Ç—å")
    async def bite_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.bite_action(interaction, member)

    async def bite_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):

        embed = nextcord.Embed(
            description=f"{interaction.user.display_name} –∫—É—Å–∞–µ—Ç ",
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.description += f"—Å–∞–º —Å–µ–±—è."
            mention = None
        else:
            embed.description += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        custom_gif = self.bot.database.get_bite_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            embed.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/bite/gif"
            )
            embed.set_image(url=r.json()["link"])

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @MilkCog.slash_command(description="–ó–∞–ø–ª–∞–∫–∞—Ç—å")
    async def cry(
        self,
        interaction: nextcord.Interaction,
    ):

        emb = nextcord.Embed(
            title=f"{interaction.user.display_name} –ø–ª–∞—á–µ—Ç.", timestamp=datetime.now()
        )

        custom_gif = self.bot.database.get_cry_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            emb.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/cry/gif"
            )
            emb.set_image(url=r.json()["link"])
        await interaction.followup.send(embed=emb)

    @MilkCog.slash_command(description="–ü–æ–∫—Ä–∞—Å–Ω–µ—Ç—å")
    async def blush(
        self,
        interaction: nextcord.Interaction,
    ):

        emb = nextcord.Embed(
            title=f"{interaction.user.display_name} –∫—Ä–∞—Å–Ω–µ–µ—Ç.", timestamp=datetime.now()
        )
        custom_gif = self.bot.database.get_blush_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            emb.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/blush/gif"
            )
            emb.set_image(url=r.json()["link"])
        await interaction.send(embed=emb)

    @MilkCog.slash_command(description="–ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def kiss(
        self,
        interaction: nextcord.Interaction,
        user: Optional[nextcord.Member] = nextcord.SlashOption(
            name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=False
        ),
    ):
        await self.kiss_action(interaction, user)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å")
    async def kiss_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.kiss_action(interaction, member)

    async def kiss_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):

        embed = nextcord.Embed(
            description=f"{interaction.user.display_name} —Ü–µ–ª—É–µ—Ç ",
            colour=nextcord.Colour.random(),
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.description += f"—Å–∞–º —Å–µ–±—è."
            mention = None
        else:
            embed.description += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        custom_gif = self.bot.database.get_kiss_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            embed.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/kiss/gif"
            )
            embed.set_image(url=r.json()["link"])

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @MilkCog.slash_command(description="–õ–∏–∑–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def lick(
        self,
        interaction: nextcord.Interaction,
        user: Optional[nextcord.Member] = nextcord.SlashOption(
            name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=False
        ),
    ):

        embed = nextcord.Embed(
            description=f"{interaction.user.display_name} –æ–±–ª–∏–∑—ã–≤–∞–µ—Ç ",
            colour=nextcord.Colour.random(),
            timestamp=datetime.now(),
        )

        if user is None or user == interaction.user:
            embed.description += f"—Å–∞–º —Å–µ–±—è."
            mention = None
        else:
            embed.description += user.display_name
            mention = user.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        custom_gif = self.bot.database.get_lick_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            embed.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/lick/gif"
            )
            embed.set_image(url=r.json()["link"])

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @MilkCog.slash_command(description="–ü–æ–≥–ª–∞–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def pat(
        self,
        interaction: nextcord.Interaction,
        user: Optional[nextcord.Member] = nextcord.SlashOption(
            name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=False
        ),
    ):
        await self.pat_action(interaction, user)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–ü–æ–≥–ª–∞–¥–∏—Ç—å")
    async def pat_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.pat_action(interaction, member)

    async def pat_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):

        embed = nextcord.Embed(
            description=f"{interaction.user.display_name} –≥–ª–∞–¥–∏—Ç ",
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.description += f"—Å–∞–º —Å–µ–±—è."
            mention = None
        else:
            embed.description += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        custom_gif = self.bot.database.get_pat_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            embed.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/pat/gif"
            )
            embed.set_image(url=r.json()["link"])
        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @MilkCog.slash_command(description="–ü–æ–∫–æ—Ä–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def feed(
        self,
        interaction: nextcord.Interaction,
        user: Optional[nextcord.Member] = nextcord.SlashOption(
            name="–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=False
        ),
    ):

        embed = nextcord.Embed(
            colour=nextcord.Colour.random(), timestamp=datetime.now()
        )

        if user is None or user == interaction.user:
            embed.description = f"{interaction.user.display_name} –∫—É—à–∞–µ—Ç."
            mention = None
        else:
            embed.description = (
                f"{interaction.user.display_name} –∫–æ—Ä–º–∏—Ç {user.display_name}"
            )
            mention = user.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        custom_gif = self.bot.database.get_feed_gif(interaction.guild.id)
        if custom_gif is not None and randint(0, 1):
            embed.set_image(url=custom_gif)
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/feed/gif"
            )
            embed.set_image(url=r.json()["link"])

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)


def setup(bot):
    bot.add_cog(RPSlash(bot))
