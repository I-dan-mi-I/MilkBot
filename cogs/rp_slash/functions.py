import nextcord
from nextcord.ext import commands
from nextcord.ext.commands import Context
from typing import Optional
from random import randint
from faker import Faker
import requests
from random import choice
from .phrases import *
from .pictures import *
from datetime import datetime


def not_seals_check(ctx: Context) -> bool:
    return ctx.guild.id != 876474448126050394


def seals_check(ctx: Context) -> bool:
    return ctx.guild.id == 876474448126050394


def app_not_seals_check(interaction: nextcord.Interaction) -> bool:
    return interaction.guild.id != 876474448126050394


def app_seals_check(interaction: nextcord.Interaction) -> bool:
    return interaction.guild.id == 876474448126050394


class RPSlash(commands.Cog, name="RolePlay [Slash Commands]"):
    """RolePlay –∫–æ–º–∞–Ω–¥—ã"""

    COG_EMOJI: str = "üé≠"

    def __init__(self, bot):
        self.bot = bot

    # @nextcord.user_command(guild_ids=[], force_global=True, name="–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å")
    async def ship_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.ship_action(interaction, member)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"
    )
    async def ship(
        self,
        interaction: nextcord.Interaction,
        member_1: Optional[nextcord.Member] = nextcord.SlashOption(required=True),
        member_2: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        await self.ship_action(interaction, member_1, member_2)

    async def ship_action(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: nextcord.Member,
        member: Optional[nextcord.Member] = None,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        if not isinstance(member, nextcord.Member):
            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å != interaction.user:
                embed: nextcord.Embed = nextcord.Embed(
                    title=f"{interaction.user.display_name} —Å–æ–≤–º–µ—Å—Ç–∏–º —Å {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name} –Ω–∞ {randint(0, 100)}%.",
                    colour=nextcord.Colour.random(),
                )
                mention = f"{interaction.user.mention}+{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention}"
            else:
                embed: nextcord.Embed = nextcord.Embed(
                    title=f"{interaction.user.display_name}, –≤—ã –æ—Ç–ª–∏—á–Ω–æ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã —Å —Å–æ–±–æ–π. –õ—é–±–∏—Ç–µ —Å–µ–±—è :)",
                    colour=nextcord.Colour.random(),
                )
                mention = f"{interaction.user.mention}"
        else:
            if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å != member:
                embed: nextcord.Embed = nextcord.Embed(
                    title=f"{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name} —Å–æ–≤–º–µ—Å—Ç–∏–º —Å {member.display_name} –Ω–∞ {randint(0, 100)}%.",
                    colour=nextcord.Colour.random(),
                )
                mention = f"{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention}+{member.mention}"
            else:
                embed: nextcord.Embed = nextcord.Embed(
                    title=f"{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name} –æ—Ç–ª–∏—á–Ω–æ —Å–æ–≤–º–µ—Å—Ç–∏–º —Å —Å–æ–±–æ–π",
                    colour=nextcord.Colour.random(),
                )
                mention = f"{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention}"

        return await interaction.send(mention, embed=embed)

    @nextcord.slash_command(
        guild_ids=[],
        force_global=True,
        description="–®—É—Ç–æ—á–Ω–æ–µ —Ä–∞–∑–æ–±–ª–∞—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    )
    async def exposure(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        if isinstance(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, nextcord.Member):
            user: nextcord.Member = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        else:
            user: nextcord.Member = interaction.user

        await self.exposure_action(interaction, user)

    # @nextcord.user_command(guild_ids=[], force_global=True, name="–†–∞–∑–æ–±–ª–∞—á–∏—Ç—å")
    async def exposure_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.exposure_action(interaction, member)

    async def exposure_action(
        self, interaction: nextcord.Interaction, user: nextcord.Member
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        message = await interaction.send(
            f"*–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–ª—É—á–∞–π–Ω—ã, –∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é –Ω–µ–ø—Ä–µ–¥–Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–µ.*\n{user.mention} –∑–∞—Ä–∞–Ω–µ–µ –∏–∑–≤–∏–Ω—è–µ–º—Å—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞"
        )

        faker = Faker("ru-RU")

        emb: nextcord.Embed = nextcord.Embed(
            title=f"–†–∞–∑–æ–±–ª–∞—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *__{user.display_name}__*"
        )

        if randint(0, 1):
            emb.add_field(name="–§–ò–û", value=faker.name_male(), inline=True)
        else:
            emb.add_field(name="–§–ò–û", value=faker.name_female(), inline=True)

        emb.add_field(name="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", value=faker.date_of_birth(), inline=True)
        emb.add_field(name="–ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è", value=faker.address(), inline=False)
        emb.add_field(name="–ü—Ä–æ—Ñ–µ—Å—Å–∏—è", value=faker.job(), inline=False)
        await message.edit(embed=emb)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–û–±–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def hug(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        await self.hug_action(interaction, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–û–±–Ω—è—Ç—å")
    async def hug_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.hug_action(interaction, member)

    @staticmethod
    async def hug_action(
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        embed: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} –æ–±–Ω–∏–º–∞–µ—Ç ",
            colour=nextcord.Colour.random(),
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.title += f"—Å–∞–º —Å–µ–±—è. {alone}"
            mention = None
        else:
            embed.title += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        if app_seals_check(interaction) and randint(0, 1) == 0:
            embed.set_image(url=choice(hug))
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "–ö–∏—Å–∏–∫"')
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/hug/gif"
            )
            embed.set_image(url=r.json()["link"])
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @nextcord.slash_command(guild_ids=[], force_global=True, description="–£–ª—ã–±–Ω—É—Ç—å—Å—è")
    async def smile(
        self,
        interaction: nextcord.Interaction,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        emb: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} —É–ª—ã–±–∞–µ—Ç—Å—è. {choice(smile_phrases)}"
        )

        r: requests.Response = requests.get(
            "https://purrbot.site/api/img/sfw/smile/gif"
        )

        emb.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        emb.set_image(url=r.json()["link"])
        emb.colour = nextcord.Colour.random()
        await interaction.followup.send(embed=emb)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–¢—ã–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def poke(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        await self.poke_action(interaction, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)

    # @nextcord.user_command(guild_ids=[], force_global=True, name="–¢—ã–∫–Ω—É—Ç—å")
    async def poke_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.poke_action(interaction, member)

    async def poke_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        embed: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} —Ç—ã–∫–∞–µ—Ç ",
            colour=nextcord.Colour.random(),
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.title += "—Å–∞–º —Å–µ–±—è."
            mention = None
        else:
            embed.title += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        r: requests.Response = requests.get("https://purrbot.site/api/img/sfw/poke/gif")
        embed.set_image(url=r.json()["link"])
        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–î–∞—Ç—å –ø–æ—â—ë—á–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"
    )
    async def slap(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        await self.slap_action(interaction, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–î–∞—Ç—å –ø–æ—â—ë—á–∏–Ω—É")
    async def slap_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.slap_action(interaction, member)

    async def slap_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        embed: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} –¥–∞—ë—Ç –ø–æ—â—ë—á–∏–Ω—É ",
            colour=nextcord.Colour.random(),
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.title += f"—Å–∞–º–æ–º—É —Å–µ–±–µ. {alone}"
            mention = None
        else:
            embed.title += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        if app_seals_check(interaction) and randint(0, 1) == 0:
            embed.set_image(url=choice(slap))
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "–ö–∏—Å–∏–∫"')
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/slap/gif"
            )
            embed.set_image(url=r.json()["link"])
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–£–∫—É—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def bite(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        await self.bite_action(interaction, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–£–∫—É—Å–∏—Ç—å")
    async def bite_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.bite_action(interaction, member)

    async def bite_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        embed: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} –∫—É—Å–∞–µ—Ç ",
            colour=nextcord.Colour.random(),
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.title += f"—Å–∞–º —Å–µ–±—è. {alone}"
            mention = None
        else:
            embed.title += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        if app_seals_check(interaction) and randint(0, 1) == 0:
            embed.set_image(url=choice(bite))
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "–ö–∏—Å–∏–∫"')
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/bite/gif"
            )
            embed.set_image(url=r.json()["link"])
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @nextcord.slash_command(guild_ids=[], force_global=True, description="–ó–∞–ø–ª–∞–∫–∞—Ç—å")
    async def cry(
        self,
        interaction: nextcord.Interaction,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        emb: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} –ø–ª–∞—á–µ—Ç."
        )

        emb.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        r: requests.Response = requests.get("https://purrbot.site/api/img/sfw/cry/gif")

        emb.set_image(url=r.json()["link"])
        emb.colour = nextcord.Colour.random()
        await interaction.followup.send(embed=emb)

    @nextcord.slash_command(guild_ids=[], force_global=True, description="–ü–æ–∫—Ä–∞—Å–Ω–µ—Ç—å")
    async def blush(
        self,
        interaction: nextcord.Interaction,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        emb: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} –∫—Ä–∞—Å–Ω–µ–µ—Ç."
        )

        r: requests.Response = requests.get(
            "https://purrbot.site/api/img/sfw/blush/gif"
        )

        emb.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        emb.set_image(url=r.json()["link"])
        emb.colour = nextcord.Colour.random()
        await interaction.followup.send(embed=emb)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def kiss(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        await self.kiss_action(interaction, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å")
    async def kiss_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.kiss_action(interaction, member)

    async def kiss_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        embed: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} —Ü–µ–ª—É–µ—Ç ",
            colour=nextcord.Colour.random(),
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.title += f"—Å–∞–º —Å–µ–±—è. {alone}"
            mention = None
        else:
            embed.title += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        if app_seals_check(interaction) and randint(0, 1) == 0:
            embed.set_image(url=choice(kiss))
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "–ö–∏—Å–∏–∫"')
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/kiss/gif"
            )
            embed.set_image(url=r.json()["link"])
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–õ–∏–∑–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def lick(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        embed: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} –æ–±–ª–∏–∑—ã–≤–∞–µ—Ç ",
            colour=nextcord.Colour.random(),
            timestamp=datetime.now(),
        )

        if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å is None or –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å == interaction.user:
            embed.title += f"—Å–∞–º —Å–µ–±—è. {alone}"
            mention = None
        else:
            embed.title += –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name
            mention = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        if app_seals_check(interaction) and randint(0, 1) == 0:
            embed.set_image(url=choice(lick))
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "–ö–∏—Å–∏–∫"')
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/lick/gif"
            )
            embed.set_image(url=r.json()["link"])
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–ü–æ–≥–ª–∞–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def pat(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        await self.pat_action(interaction, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)

    @nextcord.user_command(guild_ids=[], force_global=True, name="–ü–æ–≥–ª–∞–¥–∏—Ç—å")
    async def pat_button(
        self, interaction: nextcord.Interaction, member: nextcord.Member
    ):
        await self.pat_action(interaction, member)

    async def pat_action(
        self,
        interaction: nextcord.Interaction,
        member: Optional[nextcord.Member] = None,
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        embed: nextcord.Embed = nextcord.Embed(
            title=f"{interaction.user.display_name} –≥–ª–∞–¥–∏—Ç ",
            colour=nextcord.Colour.random(),
            timestamp=datetime.now(),
        )

        if member is None or member == interaction.user:
            embed.title += f"—Å–∞–º —Å–µ–±—è. {alone}"
            mention = None
        else:
            embed.title += member.display_name
            mention = member.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        r: requests.Response = requests.get("https://purrbot.site/api/img/sfw/pat/gif")
        embed.set_image(url=r.json()["link"])
        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–°–ø–∞—Ç—å/—É–ª–æ–∂–∏—Ç—å —Å–ø–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def sleep(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        embed: nextcord.Embed = nextcord.Embed(
            colour=nextcord.Colour.random(), timestamp=datetime.now()
        )

        if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å is None or –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å == interaction.user:
            embed.title = f"{interaction.user.display_name} —Å–ø–∏—Ç"
            embed.set_image(url=choice(sleep))
            mention = None
        else:
            embed.title = f"{interaction.user.display_name} —É–∫–ª–∞–¥—ã–≤–∞–µ—Ç —Å–ø–∞—Ç—å {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name}"
            embed.set_image(url=choice(sleep_two))
            mention = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "–ö–∏—Å–∏–∫"')

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)

    @nextcord.slash_command(
        guild_ids=[], force_global=True, description="–ü–æ–∫–æ—Ä–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    async def feed(
        self,
        interaction: nextcord.Interaction,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: Optional[nextcord.Member] = nextcord.SlashOption(required=False),
    ):
        if interaction.guild is None:
            return await interaction.send("–í—ã –Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!")

        embed: nextcord.Embed = nextcord.Embed(
            colour=nextcord.Colour.random(), timestamp=datetime.now()
        )

        if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å is None or –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å == interaction.user:
            embed.title = f"{interaction.user.display_name} –∫—É—à–∞–µ—Ç."
            mention = None
        else:
            embed.title = (
                f"{interaction.user.display_name} –∫–æ—Ä–º–∏—Ç {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_name}"
            )
            mention = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention

        if mention is not None:
            message = await interaction.send(mention)
        else:
            message = None
            await interaction.response.defer()

        if app_seals_check(interaction) and randint(0, 1) == 0:
            embed.set_image(url=choice(feed))
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "–ö–∏—Å–∏–∫"')
        else:
            r: requests.Response = requests.get(
                "https://purrbot.site/api/img/sfw/feed/gif"
            )
            embed.set_image(url=r.json()["link"])
            embed.set_footer(text='GIF –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ "PurrBot"')

        if message is None:
            await interaction.followup.send(embed=embed)
        else:
            await message.edit(embed=embed)


def setup(bot):
    bot.add_cog(RPSlash(bot))
